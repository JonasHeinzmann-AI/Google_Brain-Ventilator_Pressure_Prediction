2021-10-02 12:34:23,853 INFO    MainThread:15256 [wandb_setup.py:_flush():69] setting env: {}
2021-10-02 12:34:23,853 INFO    MainThread:15256 [wandb_setup.py:_flush():69] setting login settings: {'api_key': 'd52c610c9bbeabcfcc8a34f5e08671c8dfae7bf2'}
2021-10-02 12:34:23,853 INFO    MainThread:15256 [wandb_setup.py:_flush():69] setting login settings: {'api_key': 'd52c610c9bbeabcfcc8a34f5e08671c8dfae7bf2'}
2021-10-02 12:34:23,853 INFO    MainThread:15256 [wandb_setup.py:_flush():69] setting login settings: {}
2021-10-02 12:34:23,853 INFO    MainThread:15256 [wandb_init.py:_log_setup():357] Logging user logs to C:\Users\heinz\Documents\GitHub\Google_Brain-Ventilator_Pressure_Prediction\wandb\run-20211002_123423-3bp76y6e\logs\debug.log
2021-10-02 12:34:23,854 INFO    MainThread:15256 [wandb_init.py:_log_setup():358] Logging internal logs to C:\Users\heinz\Documents\GitHub\Google_Brain-Ventilator_Pressure_Prediction\wandb\run-20211002_123423-3bp76y6e\logs\debug-internal.log
2021-10-02 12:34:23,854 INFO    MainThread:15256 [wandb_init.py:_jupyter_setup():307] configuring jupyter hooks <wandb.sdk.wandb_init._WandbInit object at 0x000001EAE4336E50>
2021-10-02 12:34:23,855 INFO    MainThread:15256 [wandb_init.py:init():390] calling init triggers
2021-10-02 12:34:23,855 INFO    MainThread:15256 [wandb_init.py:init():395] wandb.init called with sweep_config: {}
config: {'T_max': 50, '_wandb_kernel': 'nakama', 'apex': False, 'batch_scheduler': False, 'batch_size': 128, 'cate_seq_cols': ['R', 'C'], 'competition': 'ventilator', 'cont_seq_cols': ['time_step', 'u_in', 'u_out', 'breath_time', 'u_in_time'], 'epochs': 6, 'gradient_accumulation_steps': 1, 'hidden_size': 64, 'inference': True, 'lr': 0.007, 'max_grad_norm': 1000, 'min_lr': 2e-06, 'model_name': 'rnn', 'n_fold': 5, 'num_workers': 10, 'print_freq': 100, 'scheduler': 'CosineAnnealingLR', 'train': True, 'trn_fold': [0, 1, 2, 3, 4], 'weight_decay': 1e-06}
2021-10-02 12:34:23,855 INFO    MainThread:15256 [wandb_init.py:init():435] starting backend
2021-10-02 12:34:23,855 INFO    MainThread:15256 [backend.py:_multiprocessing_setup():70] multiprocessing start_methods=spawn, using: spawn
2021-10-02 12:34:23,860 INFO    MainThread:15256 [backend.py:ensure_launched():135] starting backend process...
2021-10-02 12:34:23,968 INFO    MainThread:15256 [backend.py:ensure_launched():139] started backend process with pid: 30028
2021-10-02 12:34:23,969 INFO    MainThread:15256 [wandb_init.py:init():440] backend started and connected
2021-10-02 12:34:23,989 INFO    MainThread:15256 [wandb_run.py:_label_probe_notebook():833] probe notebook
2021-10-02 12:34:24,000 INFO    MainThread:15256 [wandb_init.py:init():499] updated telemetry
2021-10-02 12:34:24,000 INFO    MainThread:15256 [wandb_init.py:init():522] communicating current version
2021-10-02 12:34:27,341 INFO    MainThread:15256 [wandb_init.py:init():527] got version response 
2021-10-02 12:34:27,342 INFO    MainThread:15256 [wandb_init.py:init():535] communicating run to backend with 30 second timeout
2021-10-02 12:34:57,349 INFO    MainThread:15256 [interface.py:_communicate_run():651] couldn't get run from backend
2021-10-02 12:34:57,349 ERROR   MainThread:15256 [wandb_init.py:init():540] backend process timed out
2021-10-02 12:34:57,349 ERROR   MainThread:15256 [wandb_init.py:init():549] encountered error: Error communicating with wandb process
try: wandb.init(settings=wandb.Settings(start_method='fork'))
or:  wandb.init(settings=wandb.Settings(start_method='thread'))
For more info see: https://docs.wandb.ai/library/init#init-start-error
2021-10-02 12:34:57,365 ERROR   MainThread:15256 [wandb_init.py:init():835] error
Traceback (most recent call last):
  File "C:\Users\heinz\anaconda3\lib\site-packages\wandb\sdk\wandb_init.py", line 808, in init
    run = wi.init()
  File "C:\Users\heinz\anaconda3\lib\site-packages\wandb\sdk\wandb_init.py", line 553, in init
    backend.cleanup()
  File "C:\Users\heinz\anaconda3\lib\site-packages\wandb\sdk\backend\backend.py", line 167, in cleanup
    self.interface.join()
  File "C:\Users\heinz\anaconda3\lib\site-packages\wandb\sdk\interface\interface.py", line 830, in join
    _ = self._communicate(record)
  File "C:\Users\heinz\anaconda3\lib\site-packages\wandb\sdk\interface\interface.py", line 539, in _communicate
    return self._communicate_async(rec, local=local).get(timeout=timeout)
  File "C:\Users\heinz\anaconda3\lib\site-packages\wandb\sdk\interface\interface.py", line 544, in _communicate_async
    raise Exception("The wandb backend process has shutdown")
Exception: The wandb backend process has shutdown
