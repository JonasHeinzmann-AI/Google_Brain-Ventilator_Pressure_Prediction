2021-10-02 12:42:33,711 INFO    MainThread:40612 [wandb_setup.py:_flush():69] setting env: {}
2021-10-02 12:42:33,712 INFO    MainThread:40612 [wandb_setup.py:_flush():69] setting login settings: {}
2021-10-02 12:42:33,712 INFO    MainThread:40612 [wandb_init.py:_log_setup():357] Logging user logs to C:\Users\heinz\Documents\GitHub\Google_Brain-Ventilator_Pressure_Prediction\wandb\run-20211002_124233-c21n7t6e\logs\debug.log
2021-10-02 12:42:33,712 INFO    MainThread:40612 [wandb_init.py:_log_setup():358] Logging internal logs to C:\Users\heinz\Documents\GitHub\Google_Brain-Ventilator_Pressure_Prediction\wandb\run-20211002_124233-c21n7t6e\logs\debug-internal.log
2021-10-02 12:42:33,712 INFO    MainThread:40612 [wandb_init.py:_jupyter_setup():307] configuring jupyter hooks <wandb.sdk.wandb_init._WandbInit object at 0x00000178341ECFA0>
2021-10-02 12:42:33,713 INFO    MainThread:40612 [wandb_init.py:init():390] calling init triggers
2021-10-02 12:42:33,713 INFO    MainThread:40612 [wandb_init.py:init():395] wandb.init called with sweep_config: {}
config: {'T_max': 50, '_wandb_kernel': 'nakama', 'apex': False, 'batch_scheduler': False, 'batch_size': 128, 'cate_seq_cols': ['R', 'C'], 'competition': 'ventilator', 'cont_seq_cols': ['time_step', 'u_in', 'u_out', 'breath_time', 'u_in_time'], 'epochs': 6, 'gradient_accumulation_steps': 1, 'hidden_size': 64, 'inference': True, 'lr': 0.007, 'max_grad_norm': 1000, 'min_lr': 2e-06, 'model_name': 'rnn', 'n_fold': 5, 'num_workers': 10, 'print_freq': 100, 'scheduler': 'CosineAnnealingLR', 'train': True, 'trn_fold': [0, 1, 2, 3, 4], 'weight_decay': 1e-06}
2021-10-02 12:42:33,713 INFO    MainThread:40612 [wandb_init.py:init():435] starting backend
2021-10-02 12:42:33,713 INFO    MainThread:40612 [backend.py:_multiprocessing_setup():70] multiprocessing start_methods=spawn, using: spawn
2021-10-02 12:42:33,717 INFO    MainThread:40612 [backend.py:ensure_launched():135] starting backend process...
2021-10-02 12:42:33,831 INFO    MainThread:40612 [backend.py:ensure_launched():139] started backend process with pid: 36220
2021-10-02 12:42:33,832 INFO    MainThread:40612 [wandb_init.py:init():440] backend started and connected
2021-10-02 12:42:33,851 INFO    MainThread:40612 [wandb_run.py:_label_probe_notebook():833] probe notebook
2021-10-02 12:42:33,862 INFO    MainThread:40612 [wandb_init.py:init():499] updated telemetry
2021-10-02 12:42:33,863 INFO    MainThread:40612 [wandb_init.py:init():522] communicating current version
2021-10-02 12:42:36,435 INFO    MainThread:40612 [wandb_init.py:init():527] got version response 
2021-10-02 12:42:36,435 INFO    MainThread:40612 [wandb_init.py:init():535] communicating run to backend with 30 second timeout
2021-10-02 12:43:06,438 WARNING MainThread:40612 [wandb_init.py:init():829] interrupted
Traceback (most recent call last):
  File "C:\Users\heinz\anaconda3\lib\site-packages\wandb\sdk\wandb_init.py", line 808, in init
    run = wi.init()
  File "C:\Users\heinz\anaconda3\lib\site-packages\wandb\sdk\wandb_init.py", line 536, in init
    ret = backend.interface.communicate_run(run, timeout=30)
  File "C:\Users\heinz\anaconda3\lib\site-packages\wandb\sdk\interface\interface.py", line 661, in communicate_run
    return self._communicate_run(run, timeout=timeout)
  File "C:\Users\heinz\anaconda3\lib\site-packages\wandb\sdk\interface\interface.py", line 649, in _communicate_run
    resp = self._communicate(req, timeout=timeout)
  File "C:\Users\heinz\anaconda3\lib\site-packages\wandb\sdk\interface\interface.py", line 539, in _communicate
    return self._communicate_async(rec, local=local).get(timeout=timeout)
  File "C:\Users\heinz\anaconda3\lib\site-packages\wandb\sdk\interface\interface.py", line 77, in get
    is_set = self._object_ready.wait(timeout)
  File "C:\Users\heinz\anaconda3\lib\threading.py", line 558, in wait
    signaled = self._cond.wait(timeout)
  File "C:\Users\heinz\anaconda3\lib\threading.py", line 306, in wait
    gotit = waiter.acquire(True, timeout)
KeyboardInterrupt
